{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "691q02", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 84, "report_reasons": null, "author": "plehoux", "saved": false, "mod_reports": [], "name": "t3_691q02", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "medium.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/ADXE4sQpRamFDgaRPMzUC9q3p52zj5DaVhzR8I2HSlE.jpg?s=9b1e5f642c950920b93417b67a3c3625", "width": 918, "height": 624}, "resolutions": [{"url": "https://i.redditmedia.com/ADXE4sQpRamFDgaRPMzUC9q3p52zj5DaVhzR8I2HSlE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=08d5dd681bb0a834ce672e1e17bf23e0", "width": 108, "height": 73}, {"url": "https://i.redditmedia.com/ADXE4sQpRamFDgaRPMzUC9q3p52zj5DaVhzR8I2HSlE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=c4c8df8d4e72cefba625154cc9f3c76a", "width": 216, "height": 146}, {"url": "https://i.redditmedia.com/ADXE4sQpRamFDgaRPMzUC9q3p52zj5DaVhzR8I2HSlE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=a3d58bbf0ab7f77537af8db6d93fe607", "width": 320, "height": 217}, {"url": "https://i.redditmedia.com/ADXE4sQpRamFDgaRPMzUC9q3p52zj5DaVhzR8I2HSlE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=cdab0ec89e0a26c97fad4a45ca80f7eb", "width": 640, "height": 435}], "variants": {}, "id": "R_jjVKnp8JV3LRcBvBSUYrAZVsuSTNKQrewHkRB7-q8"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/KSRKgpynkKZz2UA6RKcDyjHsXLl13rvOocjPS5XG59c.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/691q02/45_faster_react_functional_components_now/", "num_reports": null, "locked": false, "stickied": false, "created": 1493860538.0, "url": "https://medium.com/missive-app/45-faster-react-functional-components-now-3509a668e69f", "author_flair_text": null, "quarantine": false, "title": "45% Faster React Functional Components, Now", "created_utc": 1493831738.0, "distinguished": null, "media": null, "num_comments": 14, "visited": false, "subreddit_type": "public", "ups": 84}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi!&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been coding in React for only 1-2 months now, and only recently implemented Redux in my app for the standard reasons.&lt;/p&gt;\n\n&lt;p&gt;However, I was thinking, how does one take a module they&amp;#39;ve gotten working with React Redux and make it a standalone module that can be imported via NPM?&lt;/p&gt;\n\n&lt;p&gt;Since a React Redux module is tied to the entire applications state, do you need re-write this module from scratch to use setState instead of Redux?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi!\n\nI've been coding in React for only 1-2 months now, and only recently implemented Redux in my app for the standard reasons.\n\nHowever, I was thinking, how does one take a module they've gotten working with React Redux and make it a standalone module that can be imported via NPM?\n\nSince a React Redux module is tied to the entire applications state, do you need re-write this module from scratch to use setState instead of Redux?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "695vql", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "McFlurriez", "saved": false, "mod_reports": [], "name": "t3_695vql", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": true, "spoiler": false, "permalink": "/r/reactjs/comments/695vql/question_npm_modules_from_react_redux_components/", "num_reports": null, "locked": false, "stickied": false, "created": 1493908063.0, "url": "https://www.reddit.com/r/reactjs/comments/695vql/question_npm_modules_from_react_redux_components/", "author_flair_text": null, "quarantine": false, "title": "Question: NPM Modules from React Redux Components?", "created_utc": 1493879263.0, "distinguished": null, "media": null, "num_comments": 0, "visited": false, "subreddit_type": "public", "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "690fvx", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 9, "report_reasons": null, "author": "Gama1993", "saved": false, "mod_reports": [], "name": "t3_690fvx", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/qaim8MtG7bh-mCfNoYELR1AWM_v6kCXe2ef-eDhO0Bg.jpg?s=8deeedd5cb493ed2aad4e29fc6e7961b", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/qaim8MtG7bh-mCfNoYELR1AWM_v6kCXe2ef-eDhO0Bg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=dc96e5d313984b3cc99d9c59e46a2b80", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/qaim8MtG7bh-mCfNoYELR1AWM_v6kCXe2ef-eDhO0Bg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=3ce66583e4ba8df9837e2ddc50bdc417", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/qaim8MtG7bh-mCfNoYELR1AWM_v6kCXe2ef-eDhO0Bg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=a940faedebc2b55b74ce56668fb5d761", "width": 320, "height": 320}], "variants": {}, "id": "Xb0izgAqZY3nTLE-QOmQdwJEZz1GyHkW8mqlIO_V-5Y"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/T6eXUcCqbeJH8OFtgmS6ceqTwIgP2jNrntVa9DgUXDc.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/690fvx/reactraven_a_simple_react_component_for_sentry/", "num_reports": null, "locked": false, "stickied": false, "created": 1493848105.0, "url": "https://github.com/khakulov/react-raven", "author_flair_text": null, "quarantine": false, "title": "React-raven: A simple React component for Sentry integration.", "created_utc": 1493819305.0, "distinguished": null, "media": null, "num_comments": 0, "visited": false, "subreddit_type": "public", "ups": 9}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;New to the sub, Doing a project for my class right now and we are having to make API calls in React. I&amp;#39;m familiar with AJAX calls in jquery but this is getting a little more hairy for me. Any advice or links to some good reads on how to make this happen would be very much appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "New to the sub, Doing a project for my class right now and we are having to make API calls in React. I'm familiar with AJAX calls in jquery but this is getting a little more hairy for me. Any advice or links to some good reads on how to make this happen would be very much appreciated.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "69165p", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 6, "report_reasons": null, "author": "B0ydh", "saved": false, "mod_reports": [], "name": "t3_69165p", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/69165p/api_calls_in_react/", "num_reports": null, "locked": false, "stickied": false, "created": 1493855463.0, "url": "https://www.reddit.com/r/reactjs/comments/69165p/api_calls_in_react/", "author_flair_text": null, "quarantine": false, "title": "API calls in React", "created_utc": 1493826663.0, "distinguished": null, "media": null, "num_comments": 13, "visited": false, "subreddit_type": "public", "ups": 6}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have an array of objects. one of the values is a completed, which is an integer. 0, or 1.&lt;/p&gt;\n\n&lt;p&gt;In my child function, I have a .map loops over the array and then using a ternery function, if the object.completed == 0, &lt;/p&gt;\n\n&lt;p&gt;but it won&amp;#39;t render anything. here&amp;#39;s what I have:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  &amp;lt;ul className=&amp;#39;list&amp;#39; &amp;gt;\n              {this.props.tasks.map((task, i) =&amp;gt;\n                {task.completed === 0 ? &amp;lt;Task key={i} task={task.name} id={task.id} /&amp;gt;: null }\n              )}\n            &amp;lt;/ul&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;can anyone offer any insight? I want all task.completed == 0 to render a Task. if it&amp;#39;s not task.completed == 0, I don&amp;#39;t want &amp;lt;Task&amp;gt; to be created for that task within the array.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have an array of objects. one of the values is a completed, which is an integer. 0, or 1.\n\nIn my child function, I have a .map loops over the array and then using a ternery function, if the object.completed == 0, \n\nbut it won't render anything. here's what I have:\n\n      &lt;ul className='list' &gt;\n                  {this.props.tasks.map((task, i) =&gt;\n                    {task.completed === 0 ? &lt;Task key={i} task={task.name} id={task.id} /&gt;: null }\n                  )}\n                &lt;/ul&gt;\n\n\ncan anyone offer any insight? I want all task.completed == 0 to render a Task. if it's not task.completed == 0, I don't want &lt;Task&gt; to be created for that task within the array.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "693xhr", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "Dasnowman1183", "saved": false, "mod_reports": [], "name": "t3_693xhr", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/693xhr/ternery_expression_not_working_to_filter_array/", "num_reports": null, "locked": false, "stickied": false, "created": 1493882046.0, "url": "https://www.reddit.com/r/reactjs/comments/693xhr/ternery_expression_not_working_to_filter_array/", "author_flair_text": null, "quarantine": false, "title": "ternery expression not working to filter array", "created_utc": 1493853246.0, "distinguished": null, "media": null, "num_comments": 3, "visited": false, "subreddit_type": "public", "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So i&amp;#39;ve read the examples and the docs  and I still can&amp;#39;t wrap myself around this.&lt;/p&gt;\n\n&lt;p&gt;What does path.resolve mean? I often see path.resolve(___dirname, &amp;#39;/dist&amp;#39;) - what&amp;#39;s the meaning of this? &lt;/p&gt;\n\n&lt;p&gt;And why can&amp;#39;t i use &amp;#39;./&amp;#39; instead of __dirname?&lt;/p&gt;\n\n&lt;p&gt;Please ELI5&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So i've read the examples and the docs  and I still can't wrap myself around this.\n\nWhat does path.resolve mean? I often see path.resolve(___dirname, '/dist') - what's the meaning of this? \n\nAnd why can't i use './' instead of __dirname?\n\nPlease ELI5", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "690o41", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 3, "report_reasons": null, "author": "drhectapus", "saved": false, "mod_reports": [], "name": "t3_690o41", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/690o41/eli5_pathresolve_and_dirname/", "num_reports": null, "locked": false, "stickied": false, "created": 1493850481.0, "url": "https://www.reddit.com/r/reactjs/comments/690o41/eli5_pathresolve_and_dirname/", "author_flair_text": null, "quarantine": false, "title": "ELI5 path.resolve and __dirname", "created_utc": 1493821681.0, "distinguished": null, "media": null, "num_comments": 13, "visited": false, "subreddit_type": "public", "ups": 3}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "693hqv", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "thealbinosmurf", "saved": false, "mod_reports": [], "name": "t3_693hqv", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Expbyzo1ktNvtyHniMOADlfsho54HG7GIXsuHr_ufA4.jpg?s=00ae1da43c8060806fa209097d820412", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/Expbyzo1ktNvtyHniMOADlfsho54HG7GIXsuHr_ufA4.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=f8c2e9ff9ca695296f37c1736b04161c", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/Expbyzo1ktNvtyHniMOADlfsho54HG7GIXsuHr_ufA4.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=0b449b16e6cd07eda73afe420ca8b214", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/Expbyzo1ktNvtyHniMOADlfsho54HG7GIXsuHr_ufA4.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=99dce6895c8646e9714966d66a877261", "width": 320, "height": 320}], "variants": {}, "id": "LZGES1iQjEaaXaPkQaE8Sv_Qunn9pXHUre4pfBnPGfs"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/fcR0OMhfyV8uySQGThu9NWMOwjd0yYgLdRiuKZfXgWs.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/693hqv/reactpundit_react_minimal_authorization_through/", "num_reports": null, "locked": false, "stickied": false, "created": 1493877359.0, "url": "https://github.com/jcgertig/react-pundit", "author_flair_text": null, "quarantine": false, "title": "React-Pundit: React Minimal authorization through OO design", "created_utc": 1493848559.0, "distinguished": null, "media": null, "num_comments": 0, "visited": false, "subreddit_type": "public", "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve looked at just about every React table/grid component available: ag-Grid, sematable, fixed-data-table, react-data-grid, react-table, reactabular, mui-data-table. They all pack tons of built-in features, many of which I am looking for, such as sorting, filtering, and formatters. But the one thing that I need and can&amp;#39;t find is one that re-renders based on row data changing, where the data is in the Redux store.&lt;/p&gt;\n\n&lt;p&gt;The table doesn&amp;#39;t even need to set the data in the store, just observe and render accordingly. I will worry about changing the data, because the same data will be used in many other components.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve read through the docs of many of the components I&amp;#39;ve mentioned above and even tried out most of them, but can&amp;#39;t seem to make anything work. Perhaps I&amp;#39;m doing something wrong. But I feel like I&amp;#39;m about to pull my hair out over this. Any pointers would be appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I've looked at just about every React table/grid component available: ag-Grid, sematable, fixed-data-table, react-data-grid, react-table, reactabular, mui-data-table. They all pack tons of built-in features, many of which I am looking for, such as sorting, filtering, and formatters. But the one thing that I need and can't find is one that re-renders based on row data changing, where the data is in the Redux store.\n\nThe table doesn't even need to set the data in the store, just observe and render accordingly. I will worry about changing the data, because the same data will be used in many other components.\n\nI've read through the docs of many of the components I've mentioned above and even tried out most of them, but can't seem to make anything work. Perhaps I'm doing something wrong. But I feel like I'm about to pull my hair out over this. Any pointers would be appreciated.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "691nem", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 2, "report_reasons": null, "author": "HuffTheWeevil", "saved": false, "mod_reports": [], "name": "t3_691nem", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/691nem/looking_for_react_tablegrid_component_that_can/", "num_reports": null, "locked": false, "stickied": false, "created": 1493859879.0, "url": "https://www.reddit.com/r/reactjs/comments/691nem/looking_for_react_tablegrid_component_that_can/", "author_flair_text": null, "quarantine": false, "title": "Looking for react table/grid component that can re-render with redux state change", "created_utc": 1493831079.0, "distinguished": null, "media": null, "num_comments": 6, "visited": false, "subreddit_type": "public", "ups": 2}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "68y1am", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 23, "report_reasons": null, "author": "borelatech", "saved": false, "mod_reports": [], "name": "t3_68y1am", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/ViHYZXBseCwQQNcMSKhBOEShcTd666rfZnPOt4F9STI.jpg?s=5e52bf6cb3cc44da1bb03ed71702700b", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/ViHYZXBseCwQQNcMSKhBOEShcTd666rfZnPOt4F9STI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=9147d8adafbbea4940e2d88c913dd0c6", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/ViHYZXBseCwQQNcMSKhBOEShcTd666rfZnPOt4F9STI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=8296a099769c04312b037f368ec0f4f9", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/ViHYZXBseCwQQNcMSKhBOEShcTd666rfZnPOt4F9STI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=bb536221918c2b7cd722e0dba6672ef4", "width": 320, "height": 320}], "variants": {}, "id": "Nu4wfgX6xq8FMYApl8URt4IeVEIvq-beUF9rxhl1nGY"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/6weWwbKlEINAOgtKCRpAO1n9pu2sR2zqfLdtvVxUfvQ.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/68y1am/sublime_text_3_syntax_for_es6es2017_flowtype/", "num_reports": null, "locked": false, "stickied": false, "created": 1493811973.0, "url": "https://github.com/borela/naomi", "author_flair_text": null, "quarantine": false, "title": "Sublime text 3 syntax for Es6+/es2017+ &amp; flowtype &amp; react's Methods", "created_utc": 1493783173.0, "distinguished": null, "media": null, "num_comments": 10, "visited": false, "subreddit_type": "public", "ups": 23}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So,  I&amp;#39;ve been using React for about 2 years,  but the finer details of the app-she&amp;#39;ll architecture are eluding me. &lt;/p&gt;\n\n&lt;p&gt;I understand the service worker and indexeddb caching, but the initial placeholder content that will display in my app shell is confusing me. This is mostly because I&amp;#39;m not sure the BEST way to implement this. &lt;/p&gt;\n\n&lt;p&gt;My landing page doesn&amp;#39;t require any data from the server,  so there are a couple ways I could go about it. &lt;/p&gt;\n\n&lt;p&gt;I could use vanilla js to wait until the window is ready and then remove that content and mount the react app,  but I that seems like a not very good way to do things. &lt;/p&gt;\n\n&lt;p&gt;Another thing I had considered was just having the landing page be completely static, and then async loading in and caching the app script,  then I can mount the application on a different  route &lt;/p&gt;\n\n&lt;p&gt;The application is not using isomorphic because the project is pushing a beta launch soon so there isn&amp;#39;t much time. A good amount of our user base will be mobile thus the pwa optimizations. &lt;/p&gt;\n\n&lt;p&gt;I am aggressively splitting my bundles and lazy loading them in and caching them,  so I suppose I could just use a vanilla js preloaded and control the visibility of it and the app root when it finally loads. &lt;/p&gt;\n\n&lt;p&gt;Thoughts? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So,  I've been using React for about 2 years,  but the finer details of the app-she'll architecture are eluding me. \n\nI understand the service worker and indexeddb caching, but the initial placeholder content that will display in my app shell is confusing me. This is mostly because I'm not sure the BEST way to implement this. \n\nMy landing page doesn't require any data from the server,  so there are a couple ways I could go about it. \n\nI could use vanilla js to wait until the window is ready and then remove that content and mount the react app,  but I that seems like a not very good way to do things. \n\nAnother thing I had considered was just having the landing page be completely static, and then async loading in and caching the app script,  then I can mount the application on a different  route \n\nThe application is not using isomorphic because the project is pushing a beta launch soon so there isn't much time. A good amount of our user base will be mobile thus the pwa optimizations. \n\nI am aggressively splitting my bundles and lazy loading them in and caching them,  so I suppose I could just use a vanilla js preloaded and control the visibility of it and the app root when it finally loads. \n\n\nThoughts? \n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "692x0v", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "Bashkir", "saved": false, "mod_reports": [], "name": "t3_692x0v", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/692x0v/couple_questions_about_a_react_pwa/", "num_reports": null, "locked": false, "stickied": false, "created": 1493871753.0, "url": "https://www.reddit.com/r/reactjs/comments/692x0v/couple_questions_about_a_react_pwa/", "author_flair_text": null, "quarantine": false, "title": "Couple questions about a React PWA", "created_utc": 1493842953.0, "distinguished": null, "media": null, "num_comments": 0, "visited": false, "subreddit_type": "public", "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey All,&lt;/p&gt;\n\n&lt;p&gt;What&amp;#39;s the best way of transitioning between routes(basic fade in and out?)&lt;/p&gt;\n\n&lt;p&gt;I tried this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;reactDOM.render(\n    &amp;lt;Provider store={store}&amp;gt;\n        &amp;lt;BrowserRouter&amp;gt;\n            &amp;lt;div&amp;gt;\n                &amp;lt;nav&amp;gt;\n                    &amp;lt;Navigation /&amp;gt;\n                &amp;lt;/nav&amp;gt;\n                &amp;lt;ReactCSSTransitionGroup\n                    transitionName=&amp;quot;fade&amp;quot;\n                    transitionEnterTimeout={300}\n                    transitionLeaveTimeout={300}\n                    &amp;gt;\n        &amp;lt;Switch&amp;gt;\n            &amp;lt;Route exact path=&amp;quot;/&amp;quot; component={LoginConnect} /&amp;gt;\n            &amp;lt;Route exact path=&amp;quot;/contact&amp;quot; component={ContactConnect} /&amp;gt;\n            &amp;lt;Route exact path=&amp;quot;/book&amp;quot; component={DateTimeConnect} /&amp;gt;\n            &amp;lt;Route exact path=&amp;quot;/review&amp;quot; component={ReviewConnect} /&amp;gt;\n        &amp;lt;/Switch&amp;gt;\n                &amp;lt;/ReactCSSTransitionGroup&amp;gt;\n            &amp;lt;/div&amp;gt;\n        &amp;lt;/BrowserRouter&amp;gt;\n    &amp;lt;/Provider&amp;gt;,\n    document.getElementById(&amp;#39;react-router&amp;#39;)\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but I get an error due to the transition group element. &lt;/p&gt;\n\n&lt;p&gt;I am not sure how to interpret the error and since there has been a rewrite of the router I am unsure what is the best example to follow. &lt;/p&gt;\n\n&lt;p&gt;thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey All,\n \nWhat's the best way of transitioning between routes(basic fade in and out?)\n\nI tried this:\n\n    reactDOM.render(\n        &lt;Provider store={store}&gt;\n            &lt;BrowserRouter&gt;\n                &lt;div&gt;\n                    &lt;nav&gt;\n                        &lt;Navigation /&gt;\n                    &lt;/nav&gt;\n                    &lt;ReactCSSTransitionGroup\n                        transitionName=\"fade\"\n                        transitionEnterTimeout={300}\n                        transitionLeaveTimeout={300}\n                        &gt;\n            &lt;Switch&gt;\n                &lt;Route exact path=\"/\" component={LoginConnect} /&gt;\n                &lt;Route exact path=\"/contact\" component={ContactConnect} /&gt;\n                &lt;Route exact path=\"/book\" component={DateTimeConnect} /&gt;\n                &lt;Route exact path=\"/review\" component={ReviewConnect} /&gt;\n            &lt;/Switch&gt;\n                    &lt;/ReactCSSTransitionGroup&gt;\n                &lt;/div&gt;\n            &lt;/BrowserRouter&gt;\n        &lt;/Provider&gt;,\n        document.getElementById('react-router')\n    );\n\n but I get an error due to the transition group element. \n\nI am not sure how to interpret the error and since there has been a rewrite of the router I am unsure what is the best example to follow. \n\nthanks in advance.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "692dfm", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 0, "report_reasons": null, "author": "mortonprod", "saved": false, "mod_reports": [], "name": "t3_692dfm", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/692dfm/react_and_transitions/", "num_reports": null, "locked": false, "stickied": false, "created": 1493866633.0, "url": "https://www.reddit.com/r/reactjs/comments/692dfm/react_and_transitions/", "author_flair_text": null, "quarantine": false, "title": "React and transitions?", "created_utc": 1493837833.0, "distinguished": null, "media": null, "num_comments": 1, "visited": false, "subreddit_type": "public", "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I am trying to get Jest working with my React components, but the problem is that my components use aliases defined in my webpack config file. So when Jest tries to load ComponentA.jsx it cannot find components/ComponentB since components/ is an alias.&lt;/p&gt;\n\n&lt;p&gt;I was wondering if anyone could give some repos which have this thing working and hopefully I can get this up an running for my projects.&lt;/p&gt;\n\n&lt;p&gt;Any help will be appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi, I am trying to get Jest working with my React components, but the problem is that my components use aliases defined in my webpack config file. So when Jest tries to load ComponentA.jsx it cannot find components/ComponentB since components/ is an alias.\n\nI was wondering if anyone could give some repos which have this thing working and hopefully I can get this up an running for my projects.\n\nAny help will be appreciated!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "69258x", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "jnav1337", "saved": false, "mod_reports": [], "name": "t3_69258x", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/69258x/repo_with_jestwebpack_working_with_aliases/", "num_reports": null, "locked": false, "stickied": false, "created": 1493864487.0, "url": "https://www.reddit.com/r/reactjs/comments/69258x/repo_with_jestwebpack_working_with_aliases/", "author_flair_text": null, "quarantine": false, "title": "Repo with Jest+Webpack working with aliases?", "created_utc": 1493835687.0, "distinguished": null, "media": null, "num_comments": 0, "visited": false, "subreddit_type": "public", "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "690k7y", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 2, "report_reasons": null, "author": "paul_jehanno", "saved": false, "mod_reports": [], "name": "t3_690k7y", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "blog.sicara.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/oVFqfeyyzMC0nxDO669PfmDttgZO1dixvWw3tlZLXX0.jpg?s=5816891063d0a5c17a05b5ac630a58a4", "width": 943, "height": 399}, "resolutions": [{"url": "https://i.redditmedia.com/oVFqfeyyzMC0nxDO669PfmDttgZO1dixvWw3tlZLXX0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=8a1e376c0e256ba00b87d832b95dd021", "width": 108, "height": 45}, {"url": "https://i.redditmedia.com/oVFqfeyyzMC0nxDO669PfmDttgZO1dixvWw3tlZLXX0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=f80150be6dba2590cf245a160071c5df", "width": 216, "height": 91}, {"url": "https://i.redditmedia.com/oVFqfeyyzMC0nxDO669PfmDttgZO1dixvWw3tlZLXX0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=9f9f843c282630dea29a86ca7b0df3ac", "width": 320, "height": 135}, {"url": "https://i.redditmedia.com/oVFqfeyyzMC0nxDO669PfmDttgZO1dixvWw3tlZLXX0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=b63b3c071a455625c3882502cdf20d9c", "width": 640, "height": 270}], "variants": {}, "id": "FQySY6DjQpeDUZb2MWs39biVqkshp7oksE2QOeAvXU8"}], "enabled": false}, "thumbnail": "https://a.thumbs.redditmedia.com/T0xgXsBtqL27aQDyooS0Lf5BbWeErNqnVI7NT96bSg4.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/690k7y/using_open_data_shapefiles_to_draw_on_your_react/", "num_reports": null, "locked": false, "stickied": false, "created": 1493849367.0, "url": "https://blog.sicara.com/using-open-data-shapefiles-to-draw-on-your-react-native-mobile-and-web-apps-maps-2b68a549c08d", "author_flair_text": null, "quarantine": false, "title": "Using Open Data Shapefiles to Draw on your React Apps Maps", "created_utc": 1493820567.0, "distinguished": null, "media": null, "num_comments": 0, "visited": false, "subreddit_type": "public", "ups": 2}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everyone, I have a GET request in my parent component, that returns an array of objects.&lt;/p&gt;\n\n&lt;p&gt;In its child component there is a list, which maps through this array and creates one of each of these children components per item in the array.&lt;/p&gt;\n\n&lt;p&gt;Once the array is mapped, i&amp;#39;m able to access specific items of the object, such as ID or name, and as the array is mapped in the child component, the single object.id is not defined in the parent (where i need the object.id).&lt;/p&gt;\n\n&lt;p&gt;How should I go about this? Should I map the array into a variable in the parent? I&amp;#39;m a bit confused. Thank you&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello everyone, I have a GET request in my parent component, that returns an array of objects.\n\nIn its child component there is a list, which maps through this array and creates one of each of these children components per item in the array.\n\nOnce the array is mapped, i'm able to access specific items of the object, such as ID or name, and as the array is mapped in the child component, the single object.id is not defined in the parent (where i need the object.id).\n\nHow should I go about this? Should I map the array into a variable in the parent? I'm a bit confused. Thank you", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "690cqg", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 2, "report_reasons": null, "author": "Dasnowman1183", "saved": false, "mod_reports": [], "name": "t3_690cqg", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/690cqg/question_about_arrays_and_id/", "num_reports": null, "locked": false, "stickied": false, "created": 1493847122.0, "url": "https://www.reddit.com/r/reactjs/comments/690cqg/question_about_arrays_and_id/", "author_flair_text": null, "quarantine": false, "title": "question about arrays and Id", "created_utc": 1493818322.0, "distinguished": null, "media": null, "num_comments": 3, "visited": false, "subreddit_type": "public", "ups": 2}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "68uqvb", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 54, "report_reasons": null, "author": "MrWizard", "saved": false, "mod_reports": [], "name": "t3_68uqvb", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/t9432OwYMmTzqgkDQ4E5C9ORStiIBN4Y6oS9R5YFuN8.jpg?s=5fe0467be4b5409f1ce1a6c24e2c1c24", "width": 360, "height": 360}, "resolutions": [{"url": "https://i.redditmedia.com/t9432OwYMmTzqgkDQ4E5C9ORStiIBN4Y6oS9R5YFuN8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=b27c21f0f5a4cc007941b129022b9382", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/t9432OwYMmTzqgkDQ4E5C9ORStiIBN4Y6oS9R5YFuN8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=9f2693867b694d15ae4d57e3476dc380", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/t9432OwYMmTzqgkDQ4E5C9ORStiIBN4Y6oS9R5YFuN8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=78fd737988dbedf07a7aaaf3edddf20f", "width": 320, "height": 320}], "variants": {}, "id": "CxtfWvEUKrIcu7h8eSjzXKsA5wpM_u9p2iPr_QGqWIs"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/23UUEE2BeS_FMn7zSUPCZ9kbGMAuilH_tNKQ2pGpD9Q.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/68uqvb/freactal_deadsimple_composable_state_management/", "num_reports": null, "locked": false, "stickied": false, "created": 1493776732.0, "url": "https://github.com/FormidableLabs/freactal", "author_flair_text": null, "quarantine": false, "title": "freactal: Dead-simple, composable state management for React", "created_utc": 1493747932.0, "distinguished": null, "media": null, "num_comments": 21, "visited": false, "subreddit_type": "public", "ups": 54}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;React (i.e. React + Redux)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Pros&lt;/em&gt;\n* Easier to scale\n* Predictable states (cheaper scale)\n* Suitable for big front-end projects\n* Relatively small API&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;\n* Limited amount of good developers\n* Steep learning curve\n* Base packages are community-maintained&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Angular&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Pros&lt;/em&gt;\n* Popular among developers \n* Low cost of first UI version (\u0421)\n* Variety of tools suitable for teamwork\n* Suitable for fast solutions&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;\n* High possibility of unpredictable side-effects\n* Hard to scale \n* Monkey/Banana problem\n* Hard to get pure universal rendering&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Angular2&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Pros&lt;/em&gt;\n* Supported by Google\n* Better fit for enterprise-grade applications than React\n* Base packages are maintained by Google&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;\n* Steep learning curve\n* Enormous API\n* Small amount of good developers (especially for A2+Typescript)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "**React (i.e. React + Redux)**\n\n*Pros*\n* Easier to scale\n* Predictable states (cheaper scale)\n* Suitable for big front-end projects\n* Relatively small API\n\n*Cons*\n* Limited amount of good developers\n* Steep learning curve\n* Base packages are community-maintained\n\n**Angular**\n\n*Pros*\n* Popular among developers \n* Low cost of first UI version (\u0421)\n* Variety of tools suitable for teamwork\n* Suitable for fast solutions\n\n*Cons*\n* High possibility of unpredictable side-effects\n* Hard to scale \n* Monkey/Banana problem\n* Hard to get pure universal rendering\n\n**Angular2**\n\n*Pros*\n* Supported by Google\n* Better fit for enterprise-grade applications than React\n* Base packages are maintained by Google\n\n*Cons*\n* Steep learning curve\n* Enormous API\n* Small amount of good developers (especially for A2+Typescript)\n\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6914ym", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "dmitry-budko", "saved": false, "mod_reports": [], "name": "t3_6914ym", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6914ym/react_vs_angular_side_by_side_comparison/", "num_reports": null, "locked": false, "stickied": false, "created": 1493855165.0, "url": "https://www.reddit.com/r/reactjs/comments/6914ym/react_vs_angular_side_by_side_comparison/", "author_flair_text": null, "quarantine": false, "title": "React vs Angular: side by side comparison", "created_utc": 1493826365.0, "distinguished": null, "media": null, "num_comments": 10, "visited": false, "subreddit_type": "public", "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "690y33", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "aksuta", "saved": false, "mod_reports": [], "name": "t3_690y33", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "medium.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Ur6VAQHHCQk6LOKdY4NHTKShZXqVY6hbNjrTZX7AYxg.jpg?s=85ff0e564cefeccaf934be917e07bbb1", "width": 640, "height": 640}, "resolutions": [{"url": "https://i.redditmedia.com/Ur6VAQHHCQk6LOKdY4NHTKShZXqVY6hbNjrTZX7AYxg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=7293dfed18865e91fcc2d73d0880b916", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/Ur6VAQHHCQk6LOKdY4NHTKShZXqVY6hbNjrTZX7AYxg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=f9c270a64b7b9a09816d76a48b16eec3", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/Ur6VAQHHCQk6LOKdY4NHTKShZXqVY6hbNjrTZX7AYxg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=d7b17d2106b0a773167c6cb1383770f3", "width": 320, "height": 320}, {"url": "https://i.redditmedia.com/Ur6VAQHHCQk6LOKdY4NHTKShZXqVY6hbNjrTZX7AYxg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=53767983580b244f5ce0bbeb312e4716", "width": 640, "height": 640}], "variants": {}, "id": "UAFDnRiHoRDqLGLfxx-vFe7ZQUq_HhVVfpwkvEO45aA"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/kk4ardVfwYsSomzcJw3eylAKFkcvIhmRAUuC8g8GU9o.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/690y33/creating_react_components_in_structor_react_ui/", "num_reports": null, "locked": false, "stickied": false, "created": 1493853293.0, "url": "https://medium.com/@alex_pustovalov/creating-react-components-in-structor-react-ui-builder-f7c5026edfbd", "author_flair_text": null, "quarantine": false, "title": "Creating React components in Structor \u2014 React UI Builder.", "created_utc": 1493824493.0, "distinguished": null, "media": null, "num_comments": 0, "visited": false, "subreddit_type": "public", "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I&amp;#39;m going through a tutorial, and noticed a line like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const CardList = (props) =&amp;gt; {\n    return (\n    &amp;lt;div&amp;gt;\n        {props.cards.map(card =&amp;gt; &amp;lt;Card key={card.id} {...card} /&amp;gt; )}\n    &amp;lt;/div&amp;gt;\n  );\n}    \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What do the 3 dots before &amp;#39;card&amp;#39; do?  &lt;/p&gt;\n\n&lt;p&gt;thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi, I'm going through a tutorial, and noticed a line like this:\n\n    const CardList = (props) =&gt; {\n    \treturn (\n      \t&lt;div&gt;\n        \t{props.cards.map(card =&gt; &lt;Card key={card.id} {...card} /&gt; )}\n        &lt;/div&gt;\n      );\n    }    \n\n\nWhat do the 3 dots before 'card' do?  \n\nthanks!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "690o8q", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "TopNFalvors", "saved": false, "mod_reports": [], "name": "t3_690o8q", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/690o8q/syntax_help/", "num_reports": null, "locked": false, "stickied": false, "created": 1493850519.0, "url": "https://www.reddit.com/r/reactjs/comments/690o8q/syntax_help/", "author_flair_text": null, "quarantine": false, "title": "syntax help", "created_utc": 1493821719.0, "distinguished": null, "media": null, "num_comments": 1, "visited": false, "subreddit_type": "public", "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have quite a few helper functions in my react application used by different components. Currently I have them inside their own file &lt;code&gt;helperFunctions.js&lt;/code&gt; and I import required functions individually as per needed in the components using:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nimport { &amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39; } from &amp;#39;helperFunction&amp;#39;;\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Now I want to scope these functions as the list is growing bigger. Should I make an object and use nesting to achieve scoping &lt;code&gt;foo.bar();&lt;/code&gt; or is there a better to do it in react?&lt;/p&gt;\n\n&lt;p&gt;It is not really needed as we import the required functions only but a lot of functions depend each other and it would be nice to have them packed together.&lt;/p&gt;\n\n&lt;p&gt;Thanks for your suggestions.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have quite a few helper functions in my react application used by different components. Currently I have them inside their own file `helperFunctions.js` and I import required functions individually as per needed in the components using:\n\n```\nimport { 'foo', 'bar' } from 'helperFunction';\n```\n\nNow I want to scope these functions as the list is growing bigger. Should I make an object and use nesting to achieve scoping `foo.bar();` or is there a better to do it in react?\n\nIt is not really needed as we import the required functions only but a lot of functions depend each other and it would be nice to have them packed together.\n\nThanks for your suggestions.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "690m9a", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "osamashabrez", "saved": false, "mod_reports": [], "name": "t3_690m9a", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": 1493822763.0, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/690m9a/scoping_helper_functions_in_reactjs/", "num_reports": null, "locked": false, "stickied": false, "created": 1493849963.0, "url": "https://www.reddit.com/r/reactjs/comments/690m9a/scoping_helper_functions_in_reactjs/", "author_flair_text": null, "quarantine": false, "title": "Scoping helper functions in reactJs", "created_utc": 1493821163.0, "distinguished": null, "media": null, "num_comments": 2, "visited": false, "subreddit_type": "public", "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Sbej4OYTwjg?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": {"oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Using React.js with ClojureScript", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Sbej4OYTwjg?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Plexus", "thumbnail_height": 360, "thumbnail_url": "https://i.ytimg.com/vi/Sbej4OYTwjg/hqdefault.jpg", "type": "video", "provider_name": "YouTube", "author_url": "https://www.youtube.com/user/sunnyplexus"}, "type": "youtube.com"}, "link_flair_text": null, "id": "68zvca", "view_count": null, "secure_media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Sbej4OYTwjg?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "clicked": false, "score": 0, "report_reasons": null, "author": "therealplexus", "saved": false, "mod_reports": [], "name": "t3_68zvca", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "youtube.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/w2xngKsnJQHEO0X9-3DCNjPOi0vMKt6RA0QqXwOb91Y.jpg?s=20fd83ccb60526d5953d97b67b15ed91", "width": 480, "height": 360}, "resolutions": [{"url": "https://i.redditmedia.com/w2xngKsnJQHEO0X9-3DCNjPOi0vMKt6RA0QqXwOb91Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=370872a8656f98dc8489b8afd7dadd4d", "width": 108, "height": 81}, {"url": "https://i.redditmedia.com/w2xngKsnJQHEO0X9-3DCNjPOi0vMKt6RA0QqXwOb91Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=6fd0fb65d2a49d386cfc4d70d8e583d1", "width": 216, "height": 162}, {"url": "https://i.redditmedia.com/w2xngKsnJQHEO0X9-3DCNjPOi0vMKt6RA0QqXwOb91Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=44227a131b05f1c0b8d8c8cd3b3e9241", "width": 320, "height": 240}], "variants": {}, "id": "ksNr60AAvZJtD8R0e0t6N52RcjLgw1z18u8RTeemqDU"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/RSoOvuf6gM2kmRdyUgYx3o8fh4l6LBuZqC1T5XCZYiA.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "rich:video", "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/68zvca/using_reactjs_with_clojurescript/", "num_reports": null, "locked": false, "stickied": false, "created": 1493841409.0, "url": "https://www.youtube.com/watch?v=Sbej4OYTwjg", "author_flair_text": null, "quarantine": false, "title": "Using React.js with ClojureScript", "created_utc": 1493812609.0, "distinguished": null, "media": {"oembed": {"provider_url": "https://www.youtube.com/", "version": "1.0", "title": "Using React.js with ClojureScript", "thumbnail_width": 480, "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/Sbej4OYTwjg?feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "author_name": "Plexus", "thumbnail_height": 360, "thumbnail_url": "https://i.ytimg.com/vi/Sbej4OYTwjg/hqdefault.jpg", "type": "video", "provider_name": "YouTube", "author_url": "https://www.youtube.com/user/sunnyplexus"}, "type": "youtube.com"}, "num_comments": 0, "visited": false, "subreddit_type": "public", "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "68yxah", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "pcdinh", "saved": false, "mod_reports": [], "name": "t3_68yxah", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "christianalfoni.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/2SElzVhloyVoY_x1gdVyEC6GtK_FP9v959z3mUQUYaY.jpg?s=52d4ce52b4a672107866c7616f747908", "width": 776, "height": 688}, "resolutions": [{"url": "https://i.redditmedia.com/2SElzVhloyVoY_x1gdVyEC6GtK_FP9v959z3mUQUYaY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=ceb43b078fc18dfa9db6f13eb2cdc4c0", "width": 108, "height": 95}, {"url": "https://i.redditmedia.com/2SElzVhloyVoY_x1gdVyEC6GtK_FP9v959z3mUQUYaY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=c6b3b34c9737a66a8a49b7e981ec5f1c", "width": 216, "height": 191}, {"url": "https://i.redditmedia.com/2SElzVhloyVoY_x1gdVyEC6GtK_FP9v959z3mUQUYaY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=050f7228c3a4e778b7a468bf00165955", "width": 320, "height": 283}, {"url": "https://i.redditmedia.com/2SElzVhloyVoY_x1gdVyEC6GtK_FP9v959z3mUQUYaY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=e057db7e2010d87351d1bbda7a87c650", "width": 640, "height": 567}], "variants": {}, "id": "z_byg1TlLlORQWA80RYScaewiH9WiwH0EBS86YEwuUw"}], "enabled": false}, "thumbnail": "https://a.thumbs.redditmedia.com/zuHKM-ur7EkKcmhM5vD_5Tjsbp7gVS6TkhlMeMcAIZ4.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/68yxah/compare_cerebral_2_to_redux_and_modx/", "num_reports": null, "locked": false, "stickied": false, "created": 1493825523.0, "url": "http://www.christianalfoni.com/articles/2017_03_19_Cerebral-2", "author_flair_text": null, "quarantine": false, "title": "Compare Cerebral 2 to Redux and ModX", "created_utc": 1493796723.0, "distinguished": null, "media": null, "num_comments": 0, "visited": false, "subreddit_type": "public", "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m coming from the Vue world where setting the state is as easy as assigning value to the relevant object. While my code works in general, I find it very very hard to reason about potential bugs because setState is asynchronous. This means that ANY method that sets the state becomes an async function. In a single method, if I need to do anything else after setting the state, I use the second callback argument of setState. But still, this means I can never properly trust the state in this.state unless I&amp;#39;m in a setState callback function. What if something like this happens?&lt;/p&gt;\n\n&lt;p&gt;method A calls B, then immediately after calls C.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;B does some computation and sets state with this.setState.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;C uses data from this.state to compute something and set another state but at the time C was called, the setState operation by B was not finalized yet so C got stale data.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;The only way to make sure a method that uses this.state gets up to date info in the right context is basically by chaining callbacks of this.setState&amp;#39;s second argument which is a horrible way of building software. It is just needlessly complicated.&lt;/p&gt;\n\n&lt;p&gt;So I&amp;#39;m probably missing something here. Is there a way to make sure that this.state is up to date when referred to in any method without caring about when it was called? I&amp;#39;m even considering using an identical copy of this.state and updating and reading from it manually to get up-to-date info but that is a band-aid. What should I do instead?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm coming from the Vue world where setting the state is as easy as assigning value to the relevant object. While my code works in general, I find it very very hard to reason about potential bugs because setState is asynchronous. This means that ANY method that sets the state becomes an async function. In a single method, if I need to do anything else after setting the state, I use the second callback argument of setState. But still, this means I can never properly trust the state in this.state unless I'm in a setState callback function. What if something like this happens?\n\nmethod A calls B, then immediately after calls C.\n\n* B does some computation and sets state with this.setState.\n\n* C uses data from this.state to compute something and set another state but at the time C was called, the setState operation by B was not finalized yet so C got stale data.\n\nThe only way to make sure a method that uses this.state gets up to date info in the right context is basically by chaining callbacks of this.setState's second argument which is a horrible way of building software. It is just needlessly complicated.\n\nSo I'm probably missing something here. Is there a way to make sure that this.state is up to date when referred to in any method without caring about when it was called? I'm even considering using an identical copy of this.state and updating and reading from it manually to get up-to-date info but that is a band-aid. What should I do instead?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "68w0ne", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 5, "report_reasons": null, "author": "pilibitti", "saved": false, "mod_reports": [], "name": "t3_68w0ne", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": 1493760288.0, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/68w0ne/async_nature_of_thissetstate_tripping_me_up_can/", "num_reports": null, "locked": false, "stickied": false, "created": 1493788819.0, "url": "https://www.reddit.com/r/reactjs/comments/68w0ne/async_nature_of_thissetstate_tripping_me_up_can/", "author_flair_text": null, "quarantine": false, "title": "Async nature of this.setState tripping me up. can anyone help?", "created_utc": 1493760019.0, "distinguished": null, "media": null, "num_comments": 4, "visited": false, "subreddit_type": "public", "ups": 5}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "68scap", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 32, "report_reasons": null, "author": "gunoieru", "saved": false, "mod_reports": [], "name": "t3_68scap", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "svg2jsx.herokuapp.com", "hidden": false, "thumbnail": "default", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/68scap/convert_svg_to_valid_react_svg/", "num_reports": null, "locked": false, "stickied": false, "created": 1493749843.0, "url": "http://svg2jsx.herokuapp.com/", "author_flair_text": null, "quarantine": false, "title": "Convert SVG to valid react SVG", "created_utc": 1493721043.0, "distinguished": null, "media": null, "num_comments": 6, "visited": false, "subreddit_type": "public", "ups": 32}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "68tszk", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 8, "report_reasons": null, "author": "pomber", "saved": false, "mod_reports": [], "name": "t3_68tszk", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "engineering.hexacta.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/lrGhhFTx45I-D5RT6qEnFwkNjHYLwt5PGyx2pzg2Eyk.jpg?s=cbfd0ecb38f0660c021875470bad4554", "width": 1200, "height": 384}, "resolutions": [{"url": "https://i.redditmedia.com/lrGhhFTx45I-D5RT6qEnFwkNjHYLwt5PGyx2pzg2Eyk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=4b3110df2632fc91b71b18189d230dd9", "width": 108, "height": 34}, {"url": "https://i.redditmedia.com/lrGhhFTx45I-D5RT6qEnFwkNjHYLwt5PGyx2pzg2Eyk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=5f9ef518305e415cc469bd44e9f1b169", "width": 216, "height": 69}, {"url": "https://i.redditmedia.com/lrGhhFTx45I-D5RT6qEnFwkNjHYLwt5PGyx2pzg2Eyk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=5524c0e8fc344a505075c51242795b4f", "width": 320, "height": 102}, {"url": "https://i.redditmedia.com/lrGhhFTx45I-D5RT6qEnFwkNjHYLwt5PGyx2pzg2Eyk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=5bc2e2b9f3a72de005e3b9dcbb61a527", "width": 640, "height": 204}, {"url": "https://i.redditmedia.com/lrGhhFTx45I-D5RT6qEnFwkNjHYLwt5PGyx2pzg2Eyk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=172cf25ee971eeb2a8052b474b6c272d", "width": 960, "height": 307}, {"url": "https://i.redditmedia.com/lrGhhFTx45I-D5RT6qEnFwkNjHYLwt5PGyx2pzg2Eyk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=505df1f56b0075adb8c95dbc90f2c5f3", "width": 1080, "height": 345}], "variants": {}, "id": "oKWoTn0UbfrwUTfEIx2s0DsnUOOx-BzgR2Skm2WZk1Y"}], "enabled": false}, "thumbnail": "https://a.thumbs.redditmedia.com/fAdLcofJZSz5aF6g3tqr0CtooRKwWUU5GeDMhDv9Eb4.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/68tszk/didact_learning_how_react_works_by_building_it/", "num_reports": null, "locked": false, "stickied": false, "created": 1493767763.0, "url": "https://engineering.hexacta.com/didact-learning-how-react-works-by-building-it-from-scratch-51007984e5c5", "author_flair_text": null, "quarantine": false, "title": "Didact: Learning how React works by building it from scratch", "created_utc": 1493738963.0, "distinguished": null, "media": null, "num_comments": 6, "visited": false, "subreddit_type": "public", "ups": 8}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello I&amp;#39;m not sure what is the best way to approach this problem. I&amp;#39;m using an AJAX call to get json data and wish to create a new div for each of the different instances. For example I&amp;#39;ll have name1,age1,job1 and name2,age2,job2 and etc... I want to map through these and create a new div each other such as div1,div2,div.... that contains each respected information. I&amp;#39;m using state&amp;#39;s to store these data so ill have state = name: [], age: [], job:[]. Thanks for the help!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello I'm not sure what is the best way to approach this problem. I'm using an AJAX call to get json data and wish to create a new div for each of the different instances. For example I'll have name1,age1,job1 and name2,age2,job2 and etc... I want to map through these and create a new div each other such as div1,div2,div.... that contains each respected information. I'm using state's to store these data so ill have state = name: [], age: [], job:[]. Thanks for the help!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "68xl3v", "view_count": null, "secure_media_embed": {}, "clicked": false, "score": 1, "report_reasons": null, "author": "imilkmyunicorns", "saved": false, "mod_reports": [], "name": "t3_68xl3v", "subreddit_name_prefixed": "r/reactjs", "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/68xl3v/creating_new_divs_with_different_data_using_ajax/", "num_reports": null, "locked": false, "stickied": false, "created": 1493806405.0, "url": "https://www.reddit.com/r/reactjs/comments/68xl3v/creating_new_divs_with_different_data_using_ajax/", "author_flair_text": null, "quarantine": false, "title": "Creating New Divs with different Data using AJAX", "created_utc": 1493777605.0, "distinguished": null, "media": null, "num_comments": 1, "visited": false, "subreddit_type": "public", "ups": 1}}], "after": "t3_68xl3v", "before": null}}